{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport L from \"leaflet\";\nimport \"leaflet-routing-machine\";\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\nimport { useMap } from \"react-leaflet\";\nimport truck from './icons/truck.png';\nconst Leafroute = () => {\n  _s();\n  const map = useMap();\n  let DefaultIcon = L.icon({\n    iconUrl: truck,\n    iconSize: [70, 70]\n  });\n  useEffect(() => {\n    const marker1 = L.marker([33.78342557952968, -84.40550841510951], {\n      icon: DefaultIcon\n    }).addTo(map);\n    const destinationCoordinates = [33.7756, 84.3963]; // Define your fixed destination coordinates here\n\n    L.Routing.control({\n      waypoints: [L.latLng(33.78342557952968, -84.40550841510951), L.latLng(destinationCoordinates)],\n      lineOptions: {\n        styles: [{\n          color: \"blue\",\n          weight: 6,\n          opacity: 0.7\n        }]\n      },\n      routeWhileDragging: false,\n      geocoder: L.Control.Geocoder.nominatim(),\n      addWaypoints: false,\n      draggableWaypoints: false,\n      fitSelectedRoutes: true,\n      showAlternatives: true\n    }).on(\"routesfound\", function (e) {\n      e.routes[0].coordinates.forEach((c, i) => {\n        setTimeout(() => {\n          marker1.setLatLng([c.lat, c.lng]);\n        }, 1500 * i);\n      });\n    }).addTo(map);\n\n    // No need to add a click event listener, you can remove the handleClick function\n\n    // Cleanup the event listener when the component unmounts\n    return () => {\n      // No need to remove the click event listener\n    };\n  }, [DefaultIcon, map]);\n  return null;\n};\n_s(Leafroute, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = Leafroute;\nexport default Leafroute;\nvar _c;\n$RefreshReg$(_c, \"Leafroute\");","map":{"version":3,"names":["useEffect","L","useMap","truck","Leafroute","_s","map","DefaultIcon","icon","iconUrl","iconSize","marker1","marker","addTo","destinationCoordinates","Routing","control","waypoints","latLng","lineOptions","styles","color","weight","opacity","routeWhileDragging","geocoder","Control","Geocoder","nominatim","addWaypoints","draggableWaypoints","fitSelectedRoutes","showAlternatives","on","e","routes","coordinates","forEach","c","i","setTimeout","setLatLng","lat","lng","_c","$RefreshReg$"],"sources":["D:/ups/src/pages/lea/leafroute.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport L from \"leaflet\";\r\nimport \"leaflet-routing-machine\";\r\nimport \"leaflet-routing-machine/dist/leaflet-routing-machine.css\";\r\nimport { useMap } from \"react-leaflet\";\r\nimport truck from './icons/truck.png';\r\n\r\nconst Leafroute = () => {\r\n  const map = useMap();\r\n  let DefaultIcon = L.icon({\r\n    iconUrl: truck,\r\n    iconSize: [70, 70],\r\n  });\r\n\r\n  useEffect(() => {\r\n    const marker1 = L.marker([33.78342557952968,  -84.40550841510951], { icon: DefaultIcon }).addTo(map);\r\n    const destinationCoordinates = [33.7756, 84.3963]; // Define your fixed destination coordinates here\r\n\r\n    L.Routing.control({\r\n      waypoints: [L.latLng(33.78342557952968,  -84.40550841510951), L.latLng(destinationCoordinates)],\r\n      lineOptions: {\r\n        styles: [\r\n          {\r\n            color: \"blue\",\r\n            weight: 6,\r\n            opacity: 0.7,\r\n          },\r\n        ],\r\n      },\r\n      routeWhileDragging: false,\r\n      geocoder: L.Control.Geocoder.nominatim(),\r\n      addWaypoints: false,\r\n      draggableWaypoints: false,\r\n      fitSelectedRoutes: true,\r\n      showAlternatives: true,\r\n    })\r\n      .on(\"routesfound\", function (e) {\r\n        e.routes[0].coordinates.forEach((c, i) => {\r\n          setTimeout(() => {\r\n            marker1.setLatLng([c.lat, c.lng]);\r\n          }, 1500 * i);\r\n        });\r\n      })\r\n      .addTo(map);\r\n\r\n    // No need to add a click event listener, you can remove the handleClick function\r\n\r\n    // Cleanup the event listener when the component unmounts\r\n    return () => {\r\n      // No need to remove the click event listener\r\n    };\r\n  }, [DefaultIcon, map]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default Leafroute;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,yBAAyB;AAChC,OAAO,0DAA0D;AACjE,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,MAAM,mBAAmB;AAErC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,GAAG,GAAGJ,MAAM,CAAC,CAAC;EACpB,IAAIK,WAAW,GAAGN,CAAC,CAACO,IAAI,CAAC;IACvBC,OAAO,EAAEN,KAAK;IACdO,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;EACnB,CAAC,CAAC;EAEFV,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAGV,CAAC,CAACW,MAAM,CAAC,CAAC,iBAAiB,EAAG,CAAC,iBAAiB,CAAC,EAAE;MAAEJ,IAAI,EAAED;IAAY,CAAC,CAAC,CAACM,KAAK,CAACP,GAAG,CAAC;IACpG,MAAMQ,sBAAsB,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;;IAEnDb,CAAC,CAACc,OAAO,CAACC,OAAO,CAAC;MAChBC,SAAS,EAAE,CAAChB,CAAC,CAACiB,MAAM,CAAC,iBAAiB,EAAG,CAAC,iBAAiB,CAAC,EAAEjB,CAAC,CAACiB,MAAM,CAACJ,sBAAsB,CAAC,CAAC;MAC/FK,WAAW,EAAE;QACXC,MAAM,EAAE,CACN;UACEC,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,CAAC;UACTC,OAAO,EAAE;QACX,CAAC;MAEL,CAAC;MACDC,kBAAkB,EAAE,KAAK;MACzBC,QAAQ,EAAExB,CAAC,CAACyB,OAAO,CAACC,QAAQ,CAACC,SAAS,CAAC,CAAC;MACxCC,YAAY,EAAE,KAAK;MACnBC,kBAAkB,EAAE,KAAK;MACzBC,iBAAiB,EAAE,IAAI;MACvBC,gBAAgB,EAAE;IACpB,CAAC,CAAC,CACCC,EAAE,CAAC,aAAa,EAAE,UAAUC,CAAC,EAAE;MAC9BA,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAACC,OAAO,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QACxCC,UAAU,CAAC,MAAM;UACf7B,OAAO,CAAC8B,SAAS,CAAC,CAACH,CAAC,CAACI,GAAG,EAAEJ,CAAC,CAACK,GAAG,CAAC,CAAC;QACnC,CAAC,EAAE,IAAI,GAAGJ,CAAC,CAAC;MACd,CAAC,CAAC;IACJ,CAAC,CAAC,CACD1B,KAAK,CAACP,GAAG,CAAC;;IAEb;;IAEA;IACA,OAAO,MAAM;MACX;IAAA,CACD;EACH,CAAC,EAAE,CAACC,WAAW,EAAED,GAAG,CAAC,CAAC;EAEtB,OAAO,IAAI;AACb,CAAC;AAACD,EAAA,CA/CID,SAAS;EAAA,QACDF,MAAM;AAAA;AAAA0C,EAAA,GADdxC,SAAS;AAiDf,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}