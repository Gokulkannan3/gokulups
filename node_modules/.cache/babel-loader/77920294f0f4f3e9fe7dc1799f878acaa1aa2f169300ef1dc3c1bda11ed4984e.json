{"ast":null,"code":"var _jsxFileName = \"D:\\\\ups\\\\src\\\\pages\\\\lea\\\\leaf.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { MapContainer, TileLayer, Marker } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport Navbar from \"../Navi\";\nimport Footer from '../Footer';\nimport './styles.css';\nimport imag from './icons/ups.png';\nimport u from './icons/ups.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customIcon = new L.Icon({\n  iconUrl: u,\n  iconSize: [38, 38]\n});\nconst Leaf = () => {\n  _s();\n  const [locations, setLocations] = useState([]);\n  const [initialPosition, setInitialPosition] = useState({\n    latitude: 13.0290,\n    longitude: 80.0310\n  });\n  const [mapCenter, setMapCenter] = useState([initialPosition.latitude, initialPosition.longitude]);\n  const zoomLevel = 15;\n  useEffect(() => {\n    // Fetch data from the API\n    fetch(\"http://172.22.81.182:8080/rfid/getall\").then(response => response.json()).then(data => {\n      if (Array.isArray(data) && data.length > 0) {\n        // Assuming your API response contains latitude and longitude fields\n        const firstLocation = data[0];\n        setLocations(data); // Update the state with fetched data\n        setInitialPosition({\n          latitude: firstLocation.lat,\n          longitude: firstLocation.lon\n        });\n        setMapCenter([firstLocation.lat, firstLocation.lon]);\n      } else {\n        console.error(\"API response is empty or not an array:\", data);\n      }\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    const refreshInterval = setInterval(() => {\n      window.location.reload();\n    }, 3000);\n    return () => {\n      // Clear the interval when the component unmounts\n      clearInterval(refreshInterval);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: zoomLevel,\n        scrollWheelZoom: false,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [location.lat, location.lon],\n          icon: customIcon\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-50 flex justify-end mr-24 -translate-y-72 box-border w-50\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"AWB No\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Dispatch Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaf, \"9yhp0ivqurVzUbekYTKm2M/hMUQ=\");\n_c = Leaf;\nlet DefaultIcon = L.icon({\n  iconUrl: imag,\n  iconSize: [25, 41],\n  iconAnchor: [10, 41],\n  popupAnchor: [2, -40]\n});\nL.Marker.prototype.options.icon = DefaultIcon;\nexport default Leaf;\nvar _c;\n$RefreshReg$(_c, \"Leaf\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","L","Navbar","Footer","imag","u","jsxDEV","_jsxDEV","customIcon","Icon","iconUrl","iconSize","Leaf","_s","locations","setLocations","initialPosition","setInitialPosition","latitude","longitude","mapCenter","setMapCenter","zoomLevel","fetch","then","response","json","data","Array","isArray","length","firstLocation","lat","lon","console","error","catch","refreshInterval","setInterval","window","location","reload","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","center","zoom","scrollWheelZoom","attribution","url","map","index","position","icon","_c","DefaultIcon","iconAnchor","popupAnchor","prototype","options","$RefreshReg$"],"sources":["D:/ups/src/pages/lea/leaf.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { MapContainer, TileLayer, Marker } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\n\r\nimport Navbar from \"../Navi\";\r\nimport Footer from '../Footer';\r\nimport './styles.css'\r\nimport imag from './icons/ups.png'\r\nimport u from './icons/ups.png'\r\n\r\nconst customIcon = new L.Icon({\r\n  iconUrl: u,\r\n  iconSize: [38, 38]\r\n});\r\n\r\nconst Leaf = () => {\r\n  const [locations, setLocations] = useState([]);\r\n  const [initialPosition, setInitialPosition] = useState({ latitude: 13.0290, longitude: 80.0310 });\r\n  const [mapCenter, setMapCenter] = useState([initialPosition.latitude, initialPosition.longitude]);\r\n  const zoomLevel = 15;\r\n\r\n  useEffect(() => {\r\n    // Fetch data from the API\r\n    fetch(\"http://172.22.81.182:8080/rfid/getall\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (Array.isArray(data) && data.length > 0) {\r\n          // Assuming your API response contains latitude and longitude fields\r\n          const firstLocation = data[0];\r\n          setLocations(data); // Update the state with fetched data\r\n          setInitialPosition({ latitude: firstLocation.lat, longitude: firstLocation.lon });\r\n          setMapCenter([firstLocation.lat, firstLocation.lon]);\r\n        } else {\r\n          console.error(\"API response is empty or not an array:\", data);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const refreshInterval = setInterval(() => {\r\n      window.location.reload();\r\n    }, 3000);\r\n\r\n    return () => {\r\n      // Clear the interval when the component unmounts\r\n      clearInterval(refreshInterval);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"App\">\r\n        <MapContainer center={mapCenter} zoom={zoomLevel} scrollWheelZoom={false}>\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          />\r\n          {locations.map((location, index) => (\r\n            <Marker\r\n              key={index}\r\n              position={[location.lat, location.lon]}\r\n              icon={customIcon}\r\n            />\r\n          ))}\r\n        </MapContainer>\r\n        <div className=\"w-50 flex justify-end mr-24 -translate-y-72 box-border w-50\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th></th>\r\n                  <th>AWB No</th>\r\n                  <th>Product</th>\r\n                  <th>Dispatch Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {/* Render your table rows here */}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nlet DefaultIcon = L.icon({\r\n  iconUrl: imag,\r\n  iconSize: [25, 41],\r\n  iconAnchor: [10, 41],\r\n  popupAnchor: [2, -40],\r\n});\r\nL.Marker.prototype.options.icon = DefaultIcon;\r\n\r\nexport default Leaf;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}